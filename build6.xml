<?xml version="1.0" encoding="UTF-8"?>
<project name="Pruebas" basedir="." default="all" xmlns:sonar="antlib:org.sonar.ant" xmlns:jacoco="antlib:org.jacoco.ant">
    <property name="src.dir" value="src"/>
    <property name="test.dir" value="test"/>    
    
    <property name="build.dir"   value="build"/>    
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="testclasses.dir" value="${build.dir}/${test.dir}/classes"/>    
    
    <property name="lib.dir"     value="lib"/>
    <property name="junit4" value="${lib.dir}/junit-4.12.jar"/>
    <property name="hamcrest" value="${lib.dir}/hamcrest-core-1.3.jar"/> 
    <property name="jacocoant" value="${lib.dir}/jacocoant.jar"/>   
    <property name="sonarqube" value="${lib.dir}/sonarqube-ant-task-2.7.0.1612.jar"/>        

    <property name="jar.dir" value="dist"/>
    <property name="jarfile" value="${jar.dir}/${ant.project.name}.jar"/>

    <property name="main-class"  value="pruebas.Conductor"/>
    
    <property name="report.dir" value="report" />  
    <property name="result.exec.file" location="${report.dir}/jacoco.exec" />  

        
    <!-- Propiedes de SonarQube -->
    <property name="sonar.projectKey" value="org.sonarqube:pruebas" />
    <property name="sonar.projectName" value="Pruebas" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.sources" value="src" />
    <property name="sonar.binaries" value="build" />
    <property name="sonar.java.binaries" value="${classes.dir}" />    
    <!-- Hay que agregar esta propiedad cuando el proyecto tiene más de una clase -->
    
    <property name="sonar.sourceEncoding" value="UTF-8" />
    
    <property name="sonar.coverage.jacoco.xmlReportPaths" value="report/report.xml" />

    <target name="clean">
        <delete dir="${build.dir}"/>  
        <delete dir="${jar.dir}"/>  
        <delete dir="${report.dir}"/>      
    </target>  
    
    <target name="compile" depends="clean">
        <mkdir dir="${classes.dir}"/>	
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true" includeantruntime="false">        
        </javac>    
    </target> 
    
    <target name="jar" depends="compile">
	<mkdir dir="${jar.dir}"/>
	<jar destfile="${jarfile}" basedir="${classes.dir}">
	    <manifest>
		<attribute name="Main-Class" value="${main-class}"/>
	    </manifest>
	</jar>
    </target>        
    
    <target name="testcompile" depends="jar">
        <mkdir dir="${testclasses.dir}"/>
	    <javac srcdir="${test.dir}" destdir="${testclasses.dir}" includeantruntime="false">
                <classpath>
		    <pathelement path="${junit4}"/>
		    <pathelement path="${hamcrest}"/>
		    <pathelement path="${jarfile}"/>
                </classpath>
	    </javac>	
    </target>  
    
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="${jacocoant}" />
    </taskdef>    
    
    <target name="test" depends="testcompile">  
        <mkdir dir="${report.dir}"/> 
        <jacoco:coverage destfile="${result.exec.file}">
            <junit printsummary="on" fork="true" >
                <classpath>
                    <pathelement path="${junit4}"/>
                    <pathelement path="${hamcrest}"/>
                    <pathelement path="${testclasses.dir}"/>
                    <pathelement location="${jarfile}" />
                </classpath>
                <formatter type="xml" />
                <batchtest todir="${report.dir}">
                    <fileset dir="${test.dir}" >
                        <include name="**/*Test*.java" />
                    </fileset>
                </batchtest>
            </junit>
        </jacoco:coverage>
    </target>   
    
    <target name="testreport" depends="test">
        <jacoco:report>
            <!-- Primero se necesitan los datos recolectados de la ejecución -->
	    <executiondata>
	        <file file="${result.exec.file}" />
	    </executiondata>

	    <!-- Luego se necesitan los bytecode y archivos fuente -->
	    <structure name="${ant.project.name}">
                <classfiles>
	            <fileset dir="${classes.dir}" />
	        </classfiles>
	        <sourcefiles encoding="UTF-8">
	            <fileset dir="${src.dir}" />
	        </sourcefiles>
	    </structure>

	    <!-- Se producen reportes en diferentes formatos -->
	    <html destdir="${report.dir}" />
	    <csv destfile="${report.dir}/report.csv" />
	    <xml destfile="${report.dir}/report.xml" />
        </jacoco:report>
    </target>                  
    
    <target name="sonarqube" depends="testreport">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <classpath path="${sonarqube}" />
        </taskdef>

        <sonar:sonar />
    </target>                                             
</project>
